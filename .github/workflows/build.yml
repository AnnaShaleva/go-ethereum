name: Build

on:
  pull_request:
    branches:
      - master
    types: [opened, synchronize]
    paths-ignore:
      - 'scripts/**'
      - '**/*.md'
  push:
    # Build for the bane-main branch.
    branches:
      - master
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      ref:
        description: 'Ref to build geth [default: latest bane-main; examples: v0.92.0, 0a4ff9d3e4a9ab432fd5812eb18c98e03b5a7432]'
        required: false
        default: ''
      push_image:
        description: 'Push images to DockerHub [default: false; examples: true, false]'
        required: false
        default: 'false'
      use_latest_tag:
        description: 'Use `latest` tag while pushing images to DockerHub (applied to Ubuntu image only) [default: false; examples: true, false]'
        required: false
        default: 'false'

jobs:
  build_cli:
    name: Build geth and services
    runs-on: ${{matrix.os.name}}
    strategy:
      matrix:
        os: [{ name: ubuntu-20.04, bin-name: linux }]
        arch: [amd64]

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}
          # Allows to fetch all history for all branches and tags. Need this for proper versioning.
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Build geth
        run: make all

      - name: Rename geth binary
        if: ${{ github.event_name == 'release' }}
        run: mv ./build/bin/geth* ./build/bin/geth-${{ matrix.os.bin-name }}-${{ matrix.arch }}${{ (matrix.os.bin-name == 'windows' && '.exe') || '' }}

      - name: Upload artifact
        if: ${{ github.event_name == 'release' }}
        uses: actions/upload-artifact@v4
        with:
          name: geth-${{ matrix.os.bin-name }}-${{ matrix.arch }}
          path: ./build/bin/geth*
          if-no-files-found: error

      - name: Attach binary to the release as an asset
        if: ${{ github.event_name == 'release' }}
        run: gh release upload ${{ github.event.release.tag_name }} ./build/bin/geth-${{ matrix.os.bin-name }}-${{ matrix.arch }}${{ (matrix.os.bin-name == 'windows' && '.exe') || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_image:
    name: Build and push docker image
    runs-on: ubuntu-20.04
    if: ${{ (github.event_name == 'release' && github.event.release.target_commitish == 'master') || (github.event_name == 'workflow_dispatch') }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 0
          fetch-tags: true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Set env
        run: |
          echo "DOCKER_HUB_USERNAME=$(echo ${{ secrets.DOCKERHUB_USERNAME }} | base64)" >> $GITHUB_ENV
          echo "DOCKER_HUB_PASSWORD=$(echo ${{ secrets.DOCKERHUB_PASSWORD }} | base64)" >> $GITHUB_ENV

      - name: Check env
        run: env

      - name: Build and push
        run: go run build/ci.go docker -image -upload annashaleva/geth
